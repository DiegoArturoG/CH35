package org.generation.employee.manager;

import org.generation.employee.Employee;

public class Manager extends Employee{

	/*
	 * la clase manager sirve como sublase (Clase hija) por lo tanto debe extender (heredar) desde la superclase (Employee) para poder acceder a los atributos y metodos de la super clase 
	 * 
	 */
	//1.- Arributos
	private int antiguedad;
	private double incremento;
	
	//2.- Constructor 
	public Manager(String nombreCompleto, int id, double salario, String puesto, int antiguedad, double bono) {
		super(nombreCompleto, id, salario, puesto);
		this.antiguedad = antiguedad;
		this.incremento = bono;
	}
	
	//3- Métodos del usuario
	public void organizarReuniones() {
		System.out.println("El manager "+this.getNombreCompleto()+ "Concova a una reunion");
	}
	//Invocar el método de la superclase que guarda el salario base 
	double salarioBase = super.getSalario();
	
	
	public int getAntiguedad() {
		return antiguedad;
	}
	
	public void setAntiguedad(int antiguedad) {
		this.antiguedad = antiguedad;
	}
	
	public double getBono() {
		return incremento;
	}
	
	public void setBono(double bono) {
		this.incremento = bono;
	}
	
	public double getSalarioBase() {
		return salarioBase;
	}
	
	public void setSalarioBase(double salarioBase) {
		this.salarioBase = salarioBase;
	}
	//Overriding (aulación de métodos)
	/*En la empresa los Managers reciben un bono de $1000 al cumplir su primer año de antigüedad despues un incremento cada año de $500 .
	 * 
	 * Verificar antiguedad >= 1 true o <= 1 año false 
	 * Crear un método para verificar la antiguedad y calculat el bono a recibir  
	 * */
	public void calcularIncremento () {
		if (this.antiguedad >= 1) {
			double IncrementoTotal = 1000 + (this.antiguedad -1)*500;
			this.setIncremento(bonoTotal);
			
		} else {
			this.setIncremento(0);
			System.out.println("No hay bono");
		}
	}
	
	public void calcularSalario() {
		
	}
	//4.- Getters y setters

	
	//5.- to String
	
}
